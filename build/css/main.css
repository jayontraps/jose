/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*--------------------------------------------------------------
7.0 Alignments
--------------------------------------------------------------*/
.alignleft {
  display: inline;
  float: left;
  margin-right: 1.5em; }

.alignright {
  display: inline;
  float: right;
  margin-left: 1.5em; }

.aligncenter {
  clear: both;
  display: block;
  margin: 0 auto; }

/*--------------------------------------------------------------
8.0 Clearings
--------------------------------------------------------------*/
.clear:before,
.clear:after,
.entry-content:before,
.entry-content:after,
.comment-content:before,
.comment-content:after,
.site-header:before,
.site-header:after,
.site-content:before,
.site-content:after,
.site-footer:before,
.site-footer:after {
  content: '';
  display: table; }

.clear:after,
.entry-content:after,
.comment-content:after,
.site-header:after,
.site-content:after,
.site-footer:after {
  clear: both; }

/*--------------------------------------------------------------
9.0 Widgets
--------------------------------------------------------------*/
.widget {
  margin: 0 0 1.5em; }

/* Make sure select elements fit in widgets */
.widget select {
  max-width: 100%; }

/* Search widget */
.widget_search .search-submit {
  display: none; }

/*--------------------------------------------------------------
10.0 Content
--------------------------------------------------------------*/
/*--------------------------------------------------------------
10.1 Posts and pages
--------------------------------------------------------------*/
.hentry {
  margin: 0 0 1.5em; }

.byline,
.updated {
  display: none; }

.single .byline,
.group-blog .byline {
  display: inline; }

.page-content,
.entry-content,
.entry-summary {
  margin: 1.5em 0 0; }

.page-links {
  clear: both;
  margin: 0 0 1.5em; }

/*--------------------------------------------------------------
10.2 Asides
--------------------------------------------------------------*/
.blog .format-aside .entry-title,
.archive .format-aside .entry-title {
  display: none; }

/*--------------------------------------------------------------
10.3 Comments
--------------------------------------------------------------*/
.comment-content a {
  word-wrap: break-word; }

/*--------------------------------------------------------------
11.0 Infinite scroll
--------------------------------------------------------------*/
/* Globally hidden elements when Infinite Scroll is supported and in use. */
.infinite-scroll .paging-navigation,
.infinite-scroll.neverending .site-footer {
  /* Theme Footer (when set to scrolling) */
  display: none; }

/* When Infinite Scroll has reached its end we need to re-display elements that were hidden (via .neverending) before */
.infinity-end.neverending .site-footer {
  display: block; }

/*--------------------------------------------------------------
12.0 Media
--------------------------------------------------------------*/
.page-content img.wp-smiley,
.entry-content img.wp-smiley,
.comment-content img.wp-smiley {
  border: none;
  margin-bottom: 0;
  margin-top: 0;
  padding: 0; }

.wp-caption {
  border: 1px solid #ccc;
  margin-bottom: 1.5em;
  max-width: 100%; }

.wp-caption img[class*="wp-image-"] {
  display: block;
  margin: 1.2% auto 0;
  max-width: 98%; }

.wp-caption-text {
  text-align: center; }

.wp-caption .wp-caption-text {
  margin: 0.8075em 0; }

.site-main .gallery {
  margin-bottom: 1.5em; }

.site-main .gallery a img {
  border: none;
  height: auto;
  max-width: 90%; }

.site-main .gallery dd,
.site-main .gallery figcaption {
  margin: 0; }

/* Make sure embeds and iframes fit their containers */
embed,
iframe,
object {
  max-width: 100%; }

.grid {
  margin: 0 auto;
  max-width: 100%;
  position: relative;
  z-index: 100; }
  .grid:after {
    /* Or @extend clearfix */
    content: "";
    display: table;
    clear: both; }

[class*='col-'] {
  float: left;
  padding-right: 20px; }
  .grid [class*='col-']:last-of-type {
    padding-right: 0; }

.col-1 {
  width: 100%;
  padding-right: 0; }

.col-2-3 {
  width: 66.66%; }
  @media (max-width: 768px) {
    .col-2-3 {
      float: none;
      width: 100%;
      padding-right: 0; } }

.col-1-3 {
  width: 33.33%; }
  @media (max-width: 1024px) {
    .col-1-3 {
      width: 50%; } }
  @media (max-width: 768px) {
    .col-1-3 {
      float: none;
      width: 100%;
      padding-right: 0; } }

.col-1-2 {
  width: 50%; }
  @media (max-width: 768px) {
    .col-1-2 {
      float: none;
      width: 100%;
      padding-right: 0; } }

.col-1-4 {
  width: 25%; }
  @media (max-width: 768px) {
    .col-1-4 {
      float: none;
      width: 100%;
      padding-right: 0; } }

.col-1-8 {
  width: 12.5%;
  min-width: 100px; }

.module {
  padding: 20px; }

/* Opt-in outside padding */
.grid-pad {
  padding: 20px 0 20px 20px; }
  .grid-pad [class*='col-']:last-of-type {
    padding-right: 20px; }

* {
  box-sizing: border-box; }

img {
  height: auto;
  /* Make sure images are scaled correctly. */
  max-width: 100%;
  /* Adhere to container width. */ }

body {
  background-color: #fbfbfb; }

/* =Global
----------------------------------------------- */
.brd-line {
  width: 100px;
  display: inline-block;
  border-bottom: 2px solid; }

.dark .brd-line {
  border-color: #fbfbfb; }

.light .brd-line {
  border-color: #333333; }

.tint, .post-35 .item-content, #post-23.item-content, #post-143.item-content {
  background-color: rgba(0, 0, 0, 0.7);
  color: #fbfbfb;
  padding: 1em;
  margin-top: 1em; }
  .tint h1, .post-35 .item-content h1, #post-23.item-content h1, #post-143.item-content h1 {
    color: #fbfbfb; }
  .tint .brd-line, .post-35 .item-content .brd-line, #post-23.item-content .brd-line, #post-143.item-content .brd-line {
    color: #fbfbfb; }

.tint_light, .page-template-page-content-php .item-content {
  background-color: #fbfbfb;
  color: #333333;
  padding: 1em;
  margin-top: 1em; }
  .tint_light h1, .page-template-page-content-php .item-content h1 {
    color: #333333; }
  .tint_light .brd-line, .page-template-page-content-php .item-content .brd-line {
    color: #333333; }

/*--------------------------------------------------------------
3.0 Elements
--------------------------------------------------------------*/
hr {
  background-color: #ccc;
  border: 0;
  height: 1px;
  margin-bottom: 1.5em; }

figure {
  margin: 0; }

table {
  margin: 0 0 1.5em;
  width: 100%; }

th {
  font-weight: bold; }

p {
  margin-bottom: 1.5em; }

ul, ol {
  margin: 0 0 1.5em 3em; }

ul {
  list-style: disc; }

ol {
  list-style: decimal; }

li > ul,
li > ol {
  margin-bottom: 0;
  margin-left: 1.5em; }

dt {
  font-weight: bold; }

dd {
  margin: 0 1.5em 1.5em; }

b, strong {
  font-weight: bold; }

.fb:hover path {
  fill: #b4b4b4; }

#mc_embed_signup label,
#mc_embed_signup input[type="email"],
#mc_embed_signup input[type="submit"] {
  display: block;
  margin-bottom: 1em; }

/* Text meant only for screen readers */
.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important; }

.screen-reader-text:hover,
.screen-reader-text:active,
.screen-reader-text:focus {
  background-color: #f1f1f1;
  border-radius: 3px;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto !important;
  color: #21759b;
  display: block;
  font-size: 14px;
  font-weight: bold;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000;
  /* Above WP toolbar */ }

body {
  background-color: #000; }
  body.light #page {
    background-color: #fbfbfb;
    color: #333333; }
  body.dark #page {
    background-color: #000;
    color: #fbfbfb; }

.wrapper {
  max-width: 100%;
  height: 100%;
  margin: 0 auto;
  overflow: hidden;
  opacity: 0; }

.home .wrapper {
  height: 100vh; }

.hero {
  position: absolute;
  width: 100%;
  top: 0;
  left: 0;
  z-index: 1; }
  @media (max-width: 768px) {
    .hero {
      position: relative; } }

@media (max-width: 768px) {
  .single-portfolio .hero {
    display: none; } }

.content_wrap {
  width: 90%;
  margin: 0 auto; }

.site-header {
  width: 100%;
  height: 62px;
  position: relative;
  z-index: 2;
  background-color: rgba(0, 0, 0, 0.5); }
  @media (max-width: 768px) {
    .site-header {
      height: auto; } }

.site-branding {
  width: 170px;
  height: 62px;
  float: left;
  background-color: black; }

.site_logo {
  width: 300px;
  height: 30px;
  margin: 20px 0 0 40px;
  float: left; }
  .site_logo a {
    display: block;
    width: 300px;
    height: 30px; }
  .site_logo .logo {
    width: 100%; }

.site-title {
  text-indent: -9999999px;
  margin: 0;
  padding: 0;
  height: 0; }

.light .site-title a:visited {
  color: #fbfbfb; }

#colophon {
  width: 100%; }

.site-footer {
  width: 90%;
  margin: 0 auto;
  z-index: 10;
  height: 60px;
  background-color: rgba(0, 0, 0, 0.5); }
  .site-footer ul {
    padding: 2em 5%; }
    .site-footer ul li {
      padding: 0 1em;
      line-height: 1em;
      border-right: 1px solid #fbfbfb;
      color: #fbfbfb; }
      .site-footer ul li:first-of-type {
        padding-left: 0; }
      .site-footer ul li:last-of-type {
        border-right: none; }
      .site-footer ul li a {
        color: #fbfbfb; }

.credits {
  float: right;
  padding: 1em;
  font-style: italic;
  font-size: .9em;
  color: #b4b4b4; }

/* -----------------------------------------
   Typography Styles
----------------------------------------- */
html,
body,
button,
input,
select,
textarea {
  font-family: TimesNewRoman, "Times New Roman", Times, Baskerville, Georgia, serif;
  font-size: 17px;
  line-height: 1.5em;
  color: #333333; }

/* Links */
.dark a {
  color: #fbfbfb; }

.dark a:visited {
  color: #fbfbfb; }

.light a {
  color: #333333; }

.light a:visited {
  color: #333333; }

a {
  -webkit-tap-highlight-color: transparent; }

a.active {
  color: red; }

h1 {
  color: #fbfbfb;
  margin-top: 1.5em; }

h2 {
  margin: 0;
  text-transform: uppercase;
  font-size: 1.5em; }

/* heaadings */
h1, h2, h3, h4, h5, h6 {
  font-family: "Roboto", "News Cycle", sans-serif;
  line-height: 1.5em;
  font-weight: 300; }

h1 {
  font-size: 2.5em; }

h2 {
  font-size: 2.5em; }

h3 {
  font-size: 1.5em; }

h4 {
  font-size: 1.2em; }

/* Text meant only for screen readers */
.assistive-text {
  clip: rect(1px 1px 1px 1px);
  /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important; }

/* -----------------------------------------
   Navigation Styles
----------------------------------------- */
.nav {
  list-style: none;
  margin-left: 0; }
  .nav > li,
  .nav > li > a {
    display: inline-block;
    *display: inline;
    zoom: 1;
    text-decoration: none; }
    .nav > li :hover,
    .nav > li > a :hover {
      text-decoration: none; }

/* from underscores style.css = Menu
----------------------------------------------- */
.main-navigation {
  display: block;
  float: right; }

.main-navigation ul {
  list-style: none;
  margin: 20px 0 0 0;
  padding: 0;
  font-family: "Roboto", "News Cycle", sans-serif;
  font-weight: 300; }
  .main-navigation ul > li:last-of-type {
    margin-right: 0; }
    .main-navigation ul > li:last-of-type .slant {
      opacity: 0; }
  .main-navigation ul > li > a {
    padding: 1em;
    color: #fbfbfb;
    text-transform: uppercase;
    text-decoration: none;
    font-size: .9em;
    line-height: .9em; }
    .main-navigation ul > li > a:hover {
      text-decoration: underline; }
    .main-navigation ul > li > a:visited {
      color: #fbfbfb; }
  .main-navigation ul > li .slant {
    position: absolute;
    right: 0;
    top: -5px;
    width: 40px;
    height: 40px;
    margin-bottom: -1em; }
    .main-navigation ul > li .slant svg {
      fill: #fbfbfb; }
  @media (max-width: 768px) {
    .main-navigation ul {
      padding-bottom: 1em;
      background-color: rgba(255, 255, 255, 0.5); } }

.main-navigation.toggled .slant {
  display: none; }

.main-navigation li {
  float: left;
  position: relative;
  padding-right: 40px; }
  @media (max-width: 768px) {
    .main-navigation li {
      padding-right: 0; } }

.main-navigation ul li:hover > ul {
  display: block; }

/* Small menu */
.menu-toggle {
  cursor: pointer;
  display: none; }

@media (max-width: 768px) {
  .menu-toggle,
  .main-navigation.toggled .nav-menu {
    display: block; }
  .menu-toggle {
    width: 40px;
    height: 40px;
    float: right;
    margin: 10px; }
  svg#navicon {
    fill: #FFFFFF; }
  .main-navigation {
    float: none;
    clear: both; }
  .main-navigation ul {
    display: none; }
    .main-navigation ul li {
      float: none;
      width: 100%; }
      .main-navigation ul li a {
        display: block;
        text-align: center;
        padding: 1em .5em 1em .5em; } }

/* --------- Jason styles -----------*/
/* Sticky Nav */
.blob {
  fill: #333333; }

.dark .blob {
  fill: #fbfbfb; }

.item_nav {
  position: fixed;
  z-index: 2;
  top: 50%; }
  .item_nav a {
    text-decoration: none;
    opacity: 0;
    transition-property: opacity;
    transition-duration: 0.5s;
    transition-timing-function: ease-in; }
    .item_nav a:hover {
      opacity: 1; }
  .item_nav.on a {
    opacity: .5; }
    .item_nav.on a:hover {
      opacity: 1; }
  .item_nav.nav-previous {
    left: 0; }
  .item_nav.nav-next {
    right: 0; }

.itemList {
  width: 45%;
  margin: 3em auto;
  padding: 0;
  position: relative;
  z-index: 2; }
  .itemList ul {
    margin: 0;
    padding: 0;
    list-style: none;
    -webkit-column-count: 2;
       -moz-column-count: 2;
            column-count: 2;
    -webkit-column-gap: 5px;
       -moz-column-gap: 5px;
            column-gap: 5px; }
    .itemList ul li {
      list-style: none;
      text-align: left;
      margin-bottom: .2em; }
      .itemList ul li a {
        font-family: "Roboto", "News Cycle", sans-serif;
        font-weight: normal;
        text-transform: uppercase;
        font-size: 1em;
        color: #fbfbfb;
        text-decoration: none;
        line-height: 1em; }
        .itemList ul li a:hover {
          text-decoration: underline; }
  @media (max-width: 1024px) {
    .itemList {
      width: 70%; }
      .itemList ul {
        -webkit-column-count: 2;
           -moz-column-count: 2;
                column-count: 2;
        -webkit-column-gap: 10px;
           -moz-column-gap: 10px;
                column-gap: 10px; } }
  @media (max-width: 768px) {
    .itemList {
      width: 100%; }
      .itemList ul {
        -webkit-column-count: 1;
           -moz-column-count: 1;
                column-count: 1;
        -webkit-column-gap: 0px;
           -moz-column-gap: 0px;
                column-gap: 0px; } }

.item-content {
  position: relative;
  z-index: 10; }
  @media (max-width: 768px) {
    .item-content h1 {
      margin-top: 0; } }

.line {
  width: 240px;
  border-bottom: 1px solid #fbfbfb; }

.item-details {
  margin: 2em 0;
  padding: 0;
  -webkit-column-count: 2;
     -moz-column-count: 2;
          column-count: 2;
  -webkit-column-gap: 20px;
     -moz-column-gap: 20px;
          column-gap: 20px; }
  .item-details p {
    margin-top: 0; }
  @media (max-width: 560px) {
    .item-details {
      -webkit-column-count: 1;
         -moz-column-count: 1;
              column-count: 1;
      -webkit-column-gap: 0px;
         -moz-column-gap: 0px;
              column-gap: 0px; } }

.videoHolder {
  width: 100%;
  max-width: 630px;
  margin-top: 1em;
  padding: 6px; }

.dark .videoHolder {
  background-color: rgba(255, 255, 255, 0.5); }

.dark .post-35 .videoHolder {
  background-color: rgba(0, 0, 0, 0.5); }

.light .videoHolder {
  background-color: rgba(0, 0, 0, 0.5); }

.light .item-content h1 {
  color: #333333; }

.credentials {
  margin: 0 0 1.5em 0;
  padding: 0; }
  .credentials li {
    list-style: none; }

.secondaryWrap {
  position: relative;
  width: 100%; }
  .secondaryWrap.on #secondary-post {
    position: relative; }

#secondary-post {
  width: 100%;
  min-height: 100%;
  position: absolute;
  top: 0; }

.lg-screen #secondary-post {
  left: -100%;
  opacity: 0; }

.sm-screen #secondary-post {
  left: 0;
  opacity: 1;
  margin-top: 0; }
  .sm-screen #secondary-post h1 {
    margin-top: 0; }

.primary {
  z-index: 100; }

.page-template-page-content-php #secondary-post {
  background-color: rgba(0, 0, 0, 0.9);
  color: #fbfbfb; }
  .page-template-page-content-php #secondary-post h1, .page-template-page-content-php #secondary-post .brd-line {
    color: #fbfbfb; }

.page-template-page-content-php .post-21 .hero {
  top: 62px; }
  @media (max-width: 768px) {
    .page-template-page-content-php .post-21 .hero {
      top: 0; } }

.news h2 {
  font-size: 1.5em;
  text-transform: capitalize;
  margin-bottom: 1em; }

.news ul {
  margin-left: 0;
  padding-left: 0; }

.more-link {
  position: relative; }
  .more-link:hover {
    cursor: pointer;
    text-decoration: underline; }

.sm-screen .more-link {
  display: none; }

.dark .more-link svg {
  fill: #fbfbfb; }

.light .more-link svg {
  fill: #333333; }

.calendar_list {
  margin: 0;
  padding: 0;
  list-style: none; }
  .calendar_list li {
    width: 100%; }
    .calendar_list li .meta_grid {
      display: inline-block;
      font-style: italic;
      color: #b3b3b3; }
      .calendar_list li .meta_grid.location {
        padding-right: 1em; }
    .calendar_list li .description {
      line-height: 1em; }
      .calendar_list li .description p {
        margin: 0; }

.ws_list {
  margin: 2em 0; }

.pagination {
  text-align: center; }
  .pagination li {
    display: inline-block; }
    .pagination li a, .pagination li a:visited {
      display: block;
      padding: .5em;
      color: #b3b3b3; }
    .pagination li.current a {
      color: #fbfbfb; }

#playBtn {
  background-color: transparent;
  width: 80px;
  height: 80px;
  padding: 0;
  position: absolute;
  bottom: 50px;
  right: 50px;
  z-index: 2 !important; }
  #playBtn:hover {
    cursor: pointer; }
    #playBtn:hover #Play polygon {
      stroke: white; }
    #playBtn:hover #Play circle {
      stroke: white; }

#Play polygon {
  stroke: rgba(255, 255, 255, 0.3);
  width: 100%;
  height: 100%; }

#Play circle {
  stroke: rgba(255, 255, 255, 0.3);
  width: 100%;
  height: 100%; }

#Play line {
  stroke: rgba(255, 255, 255, 0.5);
  width: 100%;
  height: 100%; }

#overLayH1 {
  color: #fbfbfb;
  color: black;
  font-family: 'News Cycle', sans-serif;
  font-weight: normal;
  text-transform: uppercase;
  text-align: center;
  font-size: 3em;
  opacity: 0;
  position: absolute;
  z-index: 20;
  top: 40%;
  left: 40%; }

#overLayH1 a {
  text-decoration: none;
  color: #fbfbfb;
  padding: 0 .2em .2em .2em; }

/* video position: */
.videoWrapper {
  position: relative;
  z-index: 1;
  height: 100%;
  width: 100%;
  overflow: hidden;
  opacity: 0;
  transition: all 500ms ease-out 1s; }

.videoWrapper.fadein {
  opacity: 1;
  z-index: 10; }

#introVideo {
  width: 100%;
  min-width: 100%; }

/* controls */
.vidControls {
  position: absolute;
  z-index: 900;
  bottom: 5em;
  right: 0;
  color: #fff;
  margin: 0;
  padding: 0;
  opacity: 0; }

.vidControls li {
  display: inline-block;
  margin: 0 0 .2em 0;
  padding: 0;
  list-style: none; }

.vidControls span {
  display: block;
  padding: 2em;
  font-size: 2em;
  font-family: 'News Cycle', sans-serif;
  font-family: 'HelveticaNeueW02-ThinCn 674417';
  font-weight: normal; }

.vidControls span:hover {
  cursor: pointer; }

#post-23 .entry-content {
  margin: 0; }

#post-23.col-1-2 {
  width: 33.33%; }
  @media (max-width: 768px) {
    #post-23.col-1-2 {
      float: none;
      width: 100%; } }

.post-35 .hero {
  top: 62px; }

.contact .hero {
  top: 62px; }
  @media (max-width: 768px) {
    .contact .hero {
      top: 0; } }

.post-15 .hero {
  top: 100px; }
  @media (max-width: 768px) {
    .post-15 .hero {
      top: 0; } }

.logo-layer {
  position: absolute;
  z-index: 3;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #000; }

.logo-wrap {
  width: 40%;
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

.f-name {
  fill: #892B2B; }

.l-name {
  fill: #fafafa; }

.animated {
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both; }

.fadeIn {
  -webkit-animation: fadeIn 2s ease both;
  animation: fadeIn 2s ease both; }

@-webkit-keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

.c-shape {
  -webkit-animation-name: fadeIn;
          animation-name: fadeIn; }

#c-shape-2 {
  -webkit-animation-delay: 100ms;
          animation-delay: 100ms; }

#c-shape-3 {
  -webkit-animation-delay: 200ms;
          animation-delay: 200ms; }

#c-shape-4 {
  -webkit-animation-delay: 300ms;
          animation-delay: 300ms; }

#c-shape-5 {
  -webkit-animation-delay: 400ms;
          animation-delay: 400ms; }

#c-shape-6 {
  -webkit-animation-delay: 500ms;
          animation-delay: 500ms; }

#c-shape-7 {
  -webkit-animation-delay: 600ms;
          animation-delay: 600ms; }

#c-shape-8 {
  -webkit-animation-delay: 700ms;
          animation-delay: 700ms; }

#c-shape-9 {
  -webkit-animation-delay: 800ms;
          animation-delay: 800ms; }

/* clear floats */
.clearfix:before, .clearfix:after {
  content: "\0020";
  display: block;
  height: 0;
  overflow: hidden; }

.clearfix:after {
  clear: both; }

.clearfix {
  zoom: 1; }

.group:after, .site-header:after, .item-details:after {
  visibility: hidden;
  display: block;
  font-size: 0;
  content: " ";
  clear: both;
  height: 0; }

.group, .site-header, .item-details {
  display: inline-block;
  clear: both; }

/* start commented backslash hack \*/
* html .group, * html .site-header, * html .item-details {
  height: 1%; }

.group, .site-header, .item-details {
  display: block; }

/* close commented backslash hack */
.clear {
  clear: both; }

.cf, .nav {
  zoom: 1; }
  .cf:before, .nav:before, .cf:after, .nav:after {
    content: " ";
    display: table; }
  .cf:after, .nav:after {
    clear: both; }

/*# sourceMappingURL=data:application/json;base64, */
